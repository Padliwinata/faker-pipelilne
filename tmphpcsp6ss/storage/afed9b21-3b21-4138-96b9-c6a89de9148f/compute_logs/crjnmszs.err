[32m2024-10-08 19:15:33 +0700[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - afed9b21-3b21-4138-96b9-c6a89de9148f - 36711 - LOGS_CAPTURED - Started capturing logs in process (pid: 36711).
[32m2024-10-08 19:15:33 +0700[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - afed9b21-3b21-4138-96b9-c6a89de9148f - 36711 - inventory_report - STEP_START - Started execution of step "inventory_report".
[32m2024-10-08 19:15:33 +0700[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - afed9b21-3b21-4138-96b9-c6a89de9148f - inventory_report - Loading file from: /Users/rpadliwinata/PycharmProjects/dgs/supply-chain/tmphpcsp6ss/storage/transformed_inventory_data using PickledObjectFilesystemIOManager...
[32m2024-10-08 19:15:33 +0700[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - afed9b21-3b21-4138-96b9-c6a89de9148f - 36711 - inventory_report - LOADED_INPUT - Loaded input "transformed_inventory_data" using input manager "io_manager", from output "result" of step "transformed_inventory_data"
[32m2024-10-08 19:15:33 +0700[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - afed9b21-3b21-4138-96b9-c6a89de9148f - 36711 - inventory_report - STEP_INPUT - Got input "transformed_inventory_data" of type "[dict]". (Type check passed).
[32m2024-10-08 19:15:33 +0700[0m - dagster - [34mERROR[0m - [31m__ASSET_JOB - afed9b21-3b21-4138-96b9-c6a89de9148f - 36711 - inventory_report - STEP_FAILURE - Execution of step "inventory_report" failed.

dagster._core.errors.DagsterInvalidMetadata: Value is not JSON serializable.

Stack Trace:
  File "/Users/rpadliwinata/miniconda3/envs/dgs/lib/python3.11/site-packages/dagster/_core/execution/plan/execute_plan.py", line 245, in dagster_event_sequence_for_step
    for step_event in check.generator(step_events):
  File "/Users/rpadliwinata/miniconda3/envs/dgs/lib/python3.11/site-packages/dagster/_core/execution/plan/execute_step.py", line 499, in core_dagster_event_sequence_for_step
    for user_event in _step_output_error_checked_user_event_sequence(
  File "/Users/rpadliwinata/miniconda3/envs/dgs/lib/python3.11/site-packages/dagster/_core/execution/plan/execute_step.py", line 183, in _step_output_error_checked_user_event_sequence
    for user_event in user_event_sequence:
  File "/Users/rpadliwinata/miniconda3/envs/dgs/lib/python3.11/site-packages/dagster/_core/execution/plan/execute_step.py", line 87, in _process_asset_results_to_events
    for user_event in user_event_sequence:
  File "/Users/rpadliwinata/miniconda3/envs/dgs/lib/python3.11/site-packages/dagster/_core/execution/plan/compute.py", line 197, in execute_core_compute
    for step_output in _yield_compute_results(step_context, inputs, compute_fn, compute_context):
  File "/Users/rpadliwinata/miniconda3/envs/dgs/lib/python3.11/site-packages/dagster/_core/execution/plan/compute.py", line 166, in _yield_compute_results
    for event in iterate_with_context(
  File "/Users/rpadliwinata/miniconda3/envs/dgs/lib/python3.11/site-packages/dagster/_utils/__init__.py", line 477, in iterate_with_context
    next_output = next(iterator)
                  ^^^^^^^^^^^^^^
  File "/Users/rpadliwinata/miniconda3/envs/dgs/lib/python3.11/site-packages/dagster/_core/execution/plan/compute_generator.py", line 140, in _coerce_op_compute_fn_to_iterator
    result = invoke_compute_fn(
             ^^^^^^^^^^^^^^^^^^
  File "/Users/rpadliwinata/miniconda3/envs/dgs/lib/python3.11/site-packages/dagster/_core/execution/plan/compute_generator.py", line 128, in invoke_compute_fn
    return fn(context, **args_to_pass) if context_arg_provided else fn(**args_to_pass)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/rpadliwinata/PycharmProjects/dgs/supply-chain/supply_chain/inventory/assets.py", line 28, in inventory_report
    'preview': MetadataValue.json(json_data)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/rpadliwinata/miniconda3/envs/dgs/lib/python3.11/site-packages/dagster/_core/definitions/metadata/metadata_value.py", line 182, in json
    return JsonMetadataValue(data)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/rpadliwinata/miniconda3/envs/dgs/lib/python3.11/site-packages/dagster/_core/definitions/metadata/metadata_value.py", line 651, in __new__
    raise DagsterInvalidMetadata("Value is not JSON serializable.")

The above exception occurred during handling of the following exception:
TypeError: Object of type int64 is not JSON serializable

Stack Trace:
  File "/Users/rpadliwinata/miniconda3/envs/dgs/lib/python3.11/site-packages/dagster/_core/definitions/metadata/metadata_value.py", line 649, in __new__
    seven.dumps(data)
  File "/Users/rpadliwinata/miniconda3/envs/dgs/lib/python3.11/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File "/Users/rpadliwinata/miniconda3/envs/dgs/lib/python3.11/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/rpadliwinata/miniconda3/envs/dgs/lib/python3.11/json/encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "/Users/rpadliwinata/miniconda3/envs/dgs/lib/python3.11/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
[0m
